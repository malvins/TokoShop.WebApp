@inject NavigationManager NavigationManager
<MudNavMenu>
    <MudNavLink Match="NavLinkMatch.All" OnClick=@(() => this.GoTo("/"))>Dashboard</MudNavLink>
    <MudNavGroup Title="Catalog">
        <MudNavLink OnClick=@(() => this.GoTo("/products")) Match="NavLinkMatch.Prefix">Products</MudNavLink>
        <MudNavLink OnClick=@(() => this.GoTo("/products")) Match="NavLinkMatch.Prefix">Collection</MudNavLink>
    </MudNavGroup>
    <MudNavLink OnClick=@(() => this.GoTo("/products")) Match="NavLinkMatch.Prefix">Order</MudNavLink>
    <MudNavLink OnClick=@(() => this.GoTo("/products")) Match="NavLinkMatch.Prefix">Inventory</MudNavLink>
    <MudNavLink OnClick=@(() => this.GoTo("/products")) Match="NavLinkMatch.Prefix">Report</MudNavLink>
    <MudNavLink OnClick=@(() => this.GoTo("/about")) Match="NavLinkMatch.Prefix">About</MudNavLink>
</MudNavMenu>
@code {
    private string HostUrl { set; get; } = string.Empty;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        var uri = NavigationManager.Uri.Split("/");
        if (uri.Length >= 4)
        {
            this.HostUrl = string.IsNullOrEmpty(uri[3]) ? string.Empty : $"/{uri[3]}";
        }
    }
    private void GoTo(string url)
    {
        NavigationManager.NavigateTo(this.HostUrl + url);
    }
}